{
  "name": "E‑commerce Returns Agent (Webhook → Lookup → LLM → Email)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "returns",
        "responseMode": "lastNode",
        "responseData": "allEntries"
      },
      "id": "node-webhook",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        200,
        200
      ]
    },
    {
      "parameters": {
        "url": "https://shop.example.com/orders/{{$json.body.order_id}}",
        "options": {
          "useQueryString": true
        },
        "sendBinaryData": false,
        "ignoreResponseCode": true,
        "responseFormat": "json",
        "authentication": "none",
        "method": "GET",
        "jsonParameters": true
      },
      "id": "node-http-order-lookup",
      "name": "Order Lookup",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        700,
        200
      ]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "model": "gpt-4o-mini",
        "systemMessage": "Determine return eligibility per policy; output steps and label request if eligible.",
        "messages": [
          {
            "role": "user",
            "content": "={{$json}}"
          }
        ],
        "responseType": "json"
      },
      "id": "node-openai-openai---chat",
      "name": "OpenAI - Chat",
      "type": "n8n-nodes-langchain.openai",
      "typeVersion": 2,
      "position": [
        950,
        200
      ]
    },
    {
      "parameters": {
        "fromEmail": "{{ $env.FROM_EMAIL || 'no-reply@example.com' }}",
        "toEmail": "={{$env.TO_EMAIL || 'ops@example.com'}}",
        "subject": "={{$json.subject || 'Automation update'}}",
        "text": "={{$json.body || 'See details attached'}}"
      },
      "id": "node-email-send-email-customer",
      "name": "Email Customer",
      "type": "n8n-nodes-base.sendEmail",
      "typeVersion": 2,
      "position": [
        1700,
        200
      ]
    },
    {
      "parameters": {
        "responseCode": 200,
        "responseMode": "lastNode",
        "responseData": "firstEntryJson"
      },
      "id": "node-respond-respond-to-webhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1950,
        200
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Order Lookup",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Order Lookup": {
      "main": [
        [
          {
            "node": "OpenAI - Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI - Chat": {
      "main": [
        [
          {
            "node": "Email Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Customer": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "active": false,
  "settings": {
    "executionOrder": "regular"
  },
  "staticData": {},
  "version": 2,
  "meta": {
    "created": "2025-10-03T14:44:37.602267Z",
    "author": "Mehdi Belbachir – SMB Pack (Generated)"
  }
}